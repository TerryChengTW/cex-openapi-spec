paths:
  /sapi/v1/margin/order/otoco:
    post:
      summary: Margin Account New OTOCO (TRADE)
      description: "Post a new `OTOCO` order for margin account:\n- An `OTOCO` (One-Triggers-the-Other-Cancel-the-Other)\
        \ is an order list comprised of 3 orders\n- The first order is called the\
        \ working order and must be `LIMIT` or `LIMIT_MAKER`. Initially, only the\
        \ working order goes on the order book.\n  - The behavior of the working order\
        \ is the same as the `OTO`.\n- `OTOCO` has 2 pending orders (pending above\
        \ and pending below), forming an `OCO` pair. The pending orders are only placed\
        \ on the order book when the working order gets fully filled.\n  - The rules\
        \ of the pending above and pending below follow the same rules as the Order\
        \ List `OCO`.\n- OTOCOs add 3 orders to the unfilled order count, `EXCHANGE_MAX_NUM_ORDERS`\
        \ filter and `MAX_NUM_ORDERS` filter.\n\nWeight(UID): 6"
      tags:
      - Margin
      parameters:
      - $ref: ..\..\parameters/symbol.yaml
      - $ref: ..\..\parameters/isIsolatedMargin.yaml
      - name: sideEffectType
        in: query
        description: Default `NO_SIDE_EFFECT`
        schema:
          type: string
          enum:
          - NO_SIDE_EFFECT
          - MARGIN_BUY
      - name: autoRepayAtCancel
        in: query
        description: Only when MARGIN_BUY order takes effect, true means that the
          debt generated by the order needs to be repay after the order is cancelled.
          The default is true
        schema:
          type: boolean
          example: true
      - name: listClientOrderId
        in: query
        description: 'Arbitrary unique ID among open order lists. Automatically generated
          if not sent.

          A new order list with the same `listClientOrderId` is accepted only when
          the previous one is filled or completely expired.

          `listClientOrderId` is distinct from the `workingClientOrderId` and the
          `pendingClientOrderId`.'
        schema:
          type: string
      - $ref: ..\..\parameters/ocoNewOrderRespType.yaml
      - $ref: ..\..\parameters/selfTradePreventionMode.yaml
      - $ref: ..\..\parameters/workingType.yaml
      - $ref: ..\..\parameters/workingSide.yaml
      - $ref: ..\..\parameters/workingClientOrderId.yaml
      - $ref: ..\..\parameters/workingPrice.yaml
      - $ref: ..\..\parameters/workingQuantity.yaml
      - $ref: ..\..\parameters/workingIcebergQty.yaml
      - $ref: ..\..\parameters/workingTimeInForce.yaml
      - $ref: ..\..\parameters/pendingSide.yaml
      - $ref: ..\..\parameters/pendingQuantity.yaml
      - $ref: ..\..\parameters/pendingAboveType.yaml
      - $ref: ..\..\parameters/pendingAboveClientOrderId.yaml
      - $ref: ..\..\parameters/pendingAbovePrice.yaml
      - $ref: ..\..\parameters/pendingAboveStopPrice.yaml
      - $ref: ..\..\parameters/pendingAboveTrailingDelta.yaml
      - $ref: ..\..\parameters/pendingAboveIcebergQty.yaml
      - $ref: ..\..\parameters/pendingAboveTimeInForce.yaml
      - $ref: ..\..\parameters/pendingBelowType.yaml
      - $ref: ..\..\parameters/pendingBelowClientOrderId.yaml
      - $ref: ..\..\parameters/pendingBelowPrice.yaml
      - $ref: ..\..\parameters/pendingBelowStopPrice.yaml
      - $ref: ..\..\parameters/pendingBelowTrailingDelta.yaml
      - $ref: ..\..\parameters/pendingBelowIcebergQty.yaml
      - $ref: ..\..\parameters/pendingBelowTimeInForce.yaml
      - $ref: ..\..\parameters/timestamp.yaml
      - $ref: ..\..\parameters/signature.yaml
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          $ref: ..\..\responses/otoco_post_200.yaml
        '400':
          $ref: ..\..\responses/otoco_post_400.yaml
        '401':
          $ref: ..\..\responses/otoco_post_401.yaml
