post:
  summary: New Order List - OTO (TRADE)
  description: 'Places an `OTO`.

    - An `OTO` (One-Triggers-the-Other) is an order list comprised of 2 orders.

    - The first order is called the working order and must be `LIMIT` or `LIMIT_MAKER`.
    Initially, only the working order goes on the order book.

    - The second order is called the pending order. It can be any order type except
    for `MARKET` orders using parameter `quoteOrderQty`. The pending order is only
    placed on the order book when the working order gets fully filled.

    - If either the working order or the pending order is cancelled individually,
    the other order in the order list will also be canceled or expired.

    - When the order list is placed, if the working order gets immediately fully filled,
    the placement response will show the working order as `FILLED` but the pending
    order will still appear as `PENDING_NEW`. You need to query the status of the
    pending order again to see its updated status.

    - OTOs add 2 orders to the unfilled order count, `EXCHANGE_MAX_NUM_ORDERS` filter
    and `MAX_NUM_ORDERS` filter.


    Weight: 1'
  tags:
  - Trade
  parameters:
  - $ref: ../components/parameters/symbol.yaml
  - name: listClientOrderId
    in: query
    description: 'Arbitrary unique ID among open order lists. Automatically generated
      if not sent.

      A new order list with the same `listClientOrderId` is accepted only when the
      previous one is filled or completely expired.

      `listClientOrderId` is distinct from the `workingClientOrderId` and the `pendingClientOrderId`.'
    schema:
      type: string
  - $ref: ../components/parameters/ocoNewOrderRespType.yaml
  - $ref: ../components/parameters/selfTradePreventionMode.yaml
  - $ref: ../components/parameters/workingType.yaml
  - $ref: ../components/parameters/workingSide.yaml
  - $ref: ../components/parameters/workingClientOrderId.yaml
  - $ref: ../components/parameters/workingPrice.yaml
  - $ref: ../components/parameters/workingQuantity.yaml
  - $ref: ../components/parameters/workingIcebergQty.yaml
  - $ref: ../components/parameters/workingTimeInForce.yaml
  - name: workingStrategyId
    in: query
    description: Arbitrary numeric value identifying the working order within an order
      strategy.
    schema:
      type: number
      format: double
  - name: workingStrategyType
    in: query
    description: 'Arbitrary numeric value identifying the working order strategy.

      Values smaller than 1000000 are reserved and cannot be used.'
    schema:
      type: integer
      format: int64
  - $ref: ../components/parameters/pendingType.yaml
  - $ref: ../components/parameters/pendingSide.yaml
  - $ref: ../components/parameters/pendingClientOrderId.yaml
  - $ref: ../components/parameters/pendingPrice.yaml
  - $ref: ../components/parameters/pendingStopPrice.yaml
  - $ref: ../components/parameters/pendingTrailingDelta.yaml
  - $ref: ../components/parameters/pendingQuantity.yaml
  - $ref: ../components/parameters/pendingIcebergQty.yaml
  - $ref: ../components/parameters/pendingTimeInForce.yaml
  - name: pendingStrategyId
    in: query
    description: Arbitrary numeric value identifying the pending order within an order
      strategy.
    schema:
      type: number
      format: double
  - name: pendingStrategyType
    in: query
    description: 'Arbitrary numeric value identifying the pending order strategy.

      Values smaller than 1000000 are reserved and cannot be used.'
    schema:
      type: integer
      format: int64
  - $ref: ../components/parameters/timestamp.yaml
  - $ref: ../components/parameters/signature.yaml
  security:
  - ApiKeyAuth: []
  responses:
    '200':
      $ref: ../components/responses/orderList_oto_v3_200.yaml
    '400':
      $ref: ../components/responses/orderList_oto_v3_400.yaml
    '401':
      $ref: ../components/responses/orderList_oto_v3_401.yaml
